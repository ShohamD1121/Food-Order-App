{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\Desktop\\\\FoodOrderApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartRducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartRducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/97254/Desktop/FoodOrderApp/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartRducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG,EADa;AAErBC,EAAAA,WAAW,EAAG;AAFO,CAAzB;;AAKA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;AACtB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACHX,MAAAA,KAAK,EAAGM,YADL;AAEHL,MAAAA,WAAW,EAAGQ;AAFX,KAAP;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAYA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCjB,UAAU,CAACI,UAAD,EAAYH,gBAAZ,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAGR,IAAI,IAAI;AACjCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAG,KAAR;AAAeG,MAAAA,IAAI,EAAGA;AAAtB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,yBAAyB,GAAGC,EAAE,IAAI;AACpCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAG,QAAR;AAAkBa,MAAAA,EAAE,EAAGA;AAAvB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AACfnB,IAAAA,KAAK,EAAGc,SAAS,CAACd,KADH;AAEfC,IAAAA,WAAW,EAAGa,SAAS,CAACb,WAFT;AAGfmB,IAAAA,OAAO,EAAGJ,oBAHK;AAIfK,IAAAA,UAAU,EAAGJ;AAJE,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACFN,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n    items : [],\r\n    totalAmount : 0\r\n}\r\n\r\nconst cartRducer = (state,action) => {\r\n    if (action.type === 'ADD'){\r\n        const updatedItems = state.items.concat(action.item)\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        return {\r\n            items : updatedItems,\r\n            totalAmount : updatedTotalAmount\r\n        };\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n\r\n    const [cartState, dispatchCartAction] = useReducer(cartRducer,defaultCartState);\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({type : 'ADD', item : item})\r\n    };\r\n\r\n    const removeItemFromCartHandler = id => {\r\n        dispatchCartAction({type : 'REMOVE', id : id})\r\n    };\r\n\r\n    const cartContext = {\r\n         items : cartState.items, \r\n         totalAmount : cartState.totalAmount,\r\n         addItem : addItemToCartHandler,\r\n         removeItem : removeItemFromCartHandler,\r\n     }\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}