{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/AvailableMeals.module.css","components/Meals/MealItem/MealItem.module.css","components/UI/Modal.module.css","components/Layout/Header.module.css","components/Meals/MealsSummary.module.css","components/UI/Card.module.css","components/Meals/MealItem/MealItemForm.module.css","components/UI/Input.module.css","assests/meals.jpg","components/Cart/CartIcon.js","store/cart-context.js","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/Meals/MealsSummary.js","components/UI/Card.js","components/UI/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","HeaderCartButton","props","useState","buttonIsHighLighted","setButtonIsHighLighted","useContext","numberOfCartItems","reduce","curNumber","amount","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","header","onShowCart","src","mealsImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","cartCtx","price","toFixed","meal","name","description","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","a","fetch","response","ok","Error","console","log","json","key","responseData","loadedMeals","push","catch","error","message","mealsLoading","mealsError","mealsList","map","ul","Meals","Backdrop","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","actions","onRemove","onAdd","isEmpty","Checkout","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","onConfirm","onCancel","submit","Cart","isSumbiting","setIsSumbiting","didSumbit","setDidSumbit","hasItems","isCheckout","setIsCheckout","cartItemRemoveHandler","cartItemAddHandler","sumbitOrderHandler","userData","method","body","JSON","stringify","user","orderItems","cartItems","bind","modalActions","onHideCart","cartModalContent","Fragment","total","isSumbittingModalContent","didSumbitModalContent","defaultCartState","cartReducer","state","action","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","existingItem","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cardIsShown","setCartIsShown","render"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,yBAAyB,QAAU,4B,iBCApKD,EAAOC,QAAU,CAAC,aAAa,yBAAyB,MAAQ,oBAAoB,QAAU,sBAAsB,cAAc,0BAA0B,OAAS,uB,iBCArKD,EAAOC,QAAU,CAAC,YAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,4B,kBCA1KD,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,KAAO,iC,gBCAjJD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,eAAe,qCAAqC,aAAe,qCAAqC,WAAa,mCAAmC,YAAY,oC,kBCA5ND,EAAOC,QAAU,CAAC,KAAO,uBAAuB,YAAc,8BAA8B,MAAQ,0B,gBCApGD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,qBAAqB,aAAa,4B,iBCA/FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,6B,iBCA/DD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,+GCDX,MAA0B,kC,wBCYxBC,EAZA,WACb,OACE,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBAAMC,EAAE,+R,iBCGDC,EARKC,IAAMC,cAAc,CACtCC,MAAO,GACPC,YAAa,EACbC,QAAS,SAACC,KACVC,WAAY,SAACC,KACbC,UAAY,eCqCCC,EAtCU,SAACC,GACxB,MAAqDC,oBAAS,GAA9D,mBAAOC,EAAP,KAA2BC,EAA3B,KAEOX,EADSY,qBAAWf,GACpBG,MAEDa,EAAoBb,EAAMc,QAAO,SAACC,EAAWZ,GACjD,OAAOY,EAAYZ,EAAKa,SACvB,GAEGC,EAAU,UAAMC,IAAQC,OAAd,YAAwBT,EAAsBQ,IAAQE,KAAO,IAkB7E,OAhBAC,qBAAU,WACR,GAAqB,IAAjBrB,EAAMsB,OAAV,CAGAX,GAAuB,GAGvB,IAAMY,EAAQC,YAAW,WACvBb,GAAuB,KACtB,KACH,OAAO,WACLc,aAAaF,OAEd,CAACvB,IAIF,yBAAQ0B,UAAWT,EAAYU,QAASnB,EAAMmB,QAA9C,UACE,sBAAMD,UAAWR,IAAQU,KAAzB,SACE,cAAC,EAAD,MAEF,6CACA,sBAAMF,UAAWR,IAAQW,MAAzB,SAAiChB,QCnBxBiB,EAdA,SAACtB,GACd,OACE,eAAC,WAAD,WACE,yBAAQkB,UAAWR,IAAQa,OAA3B,UACI,4CACA,cAAC,EAAD,CAAkBJ,QAASnB,EAAMwB,gBAErC,qBAAKN,UAAWR,IAAQ,cAAxB,SACI,qBAAKe,IAAKC,EAAYC,IAAI,0C,iBCKrBC,EAhBM,WACnB,OACE,0BAASV,UAAWR,IAAQmB,QAA5B,UACE,kEACA,qJAIA,6I,0DCDSC,EAPF,SAAA9B,GAET,OAAO,qBAAKkB,UAAWR,IAAQqB,KAAxB,SAA+B/B,EAAMgC,Y,0DCOjCC,EATD3C,IAAM4C,YAAW,SAAClC,EAAOmC,GACrC,OACE,sBAAKjB,UAAWR,IAAQ0B,MAAxB,UACE,uBAAOC,QAASrC,EAAMoC,MAAMvC,GAA5B,SAAiCG,EAAMsC,QACvC,mCAAOH,IAAKA,GAASnC,EAAMoC,cCmClBG,EAtCM,SAACvC,GAEpB,MAA0CC,oBAAS,GAAnD,mBAAOuC,EAAP,KAAsBC,EAAtB,KAEMC,EAAiBC,mBAcvB,OACE,uBAAMzB,UAAWR,IAAQkC,KAAMC,SAbX,SAAAC,GACpBA,EAAMC,iBACN,IAAMC,EAAgBN,EAAeO,QAAQC,MACvCC,GAAuBH,EACO,IAAhCA,EAAcI,OAAOtC,QAAgBqC,EAAsB,GAAKA,EAAsB,EACxFV,GAAiB,GAGnBzC,EAAMqD,YAAYF,IAKlB,UACE,cAAC,EAAD,CACEhB,IAAKO,EACLJ,MAAM,SACNF,MAAO,CACLvC,GAAI,UAAYG,EAAMH,GACtByD,KAAM,SACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,aAAc,OAGlB,4CACElB,GAAiB,uECLVmB,EA3BE,SAAC3D,GAChB,IAAM4D,EAAUxD,qBAAWf,GACrBwE,EAAK,WAAO7D,EAAM6D,MAAMC,QAAQ,IAWtC,OACE,qBAAI5C,UAAWR,IAAQqD,KAAvB,UACE,gCACE,6BAAK/D,EAAMgE,OACX,qBAAK9C,UAAWR,IAAQuD,YAAxB,SAAsCjE,EAAMiE,cAC5C,qBAAK/C,UAAWR,IAAQmD,MAAxB,SAAgCA,OAElC,8BACE,cAAC,EAAD,CAAchE,GAAIG,EAAMH,GAAIwD,YAjBT,SAAC7C,GACxBoD,EAAQlE,QAAQ,CACdG,GAAIG,EAAMH,GACVmE,KAAMhE,EAAMgE,KACZxD,OAAQA,EACRqD,MAAO7D,EAAM6D,iBCiEJK,EA1EQ,WACrB,MAA0BjE,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAAkCnE,oBAAS,GAA3C,mBAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAAkCrE,mBAAS,MAA3C,mBAAOsE,EAAP,KAAkBC,EAAlB,KAkCA,GAhCA3D,qBAAU,WACR,IAAM4D,EAAU,uCAAG,kCAAAC,EAAA,6DACjBJ,GAAa,GADI,SAEMK,MACrB,yEAHe,WAEXC,EAFW,QAKHC,GALG,sBAMT,IAAIC,MAAM,yBAND,cAQjBC,QAAQC,IAAIJ,GARK,SASUA,EAASK,OATnB,OAajB,IAAWC,KAJLC,EATW,OAUjBJ,QAAQC,IAAIG,GACNC,EAAc,GAEFD,EAChBC,EAAYC,KAAK,CACfxF,GAAIqF,EACJlB,KAAMmB,EAAaD,GAAKlB,KACxBC,YAAakB,EAAaD,GAAKjB,YAC/BJ,MAAOsB,EAAaD,GAAKrB,QAG7BkB,QAAQC,IAAII,GACZhB,EAASgB,GACTd,GAAa,GAvBI,4CAAH,qDAyBhBG,IAAaa,OAAM,SAACC,GAClBjB,GAAa,GACbE,EAAae,EAAMC,cAEpB,IAECnB,EACF,OACE,yBAASnD,UAAWR,IAAQ+E,aAA5B,SACE,6CAKN,GAAIlB,EACF,OACE,yBAASrD,UAAWR,IAAQgF,WAA5B,SACE,4BAAInB,MAKV,IAAMoB,EAAYxB,EAAMyB,KAAI,SAAC7B,GAC3B,OACE,cAAC,EAAD,CACElE,GAAIkE,EAAKlE,GAETmE,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAClBJ,MAAOE,EAAKF,OAHPE,EAAKlE,OAQhB,OACE,yBAASqB,UAAWR,IAAQyD,MAA5B,SACE,cAAC,EAAD,UACE,oBAAIjD,UAAWR,IAAQmF,GAAvB,SAA4BF,SC9DrBG,EAPD,WACV,OAAO,eAAC,WAAD,WACH,cAAC,EAAD,IACA,cAAC,EAAD,Q,iCCHFC,EAAW,SAAA/F,GACb,OAAO,qBAAKkB,UAAWR,IAAQsF,SAAU7E,QAASnB,EAAMmB,WAGtD8E,EAAe,SAAAjG,GACjB,OAAO,qBAAKkB,UAAWR,IAAQwF,MAAxB,SACH,qBAAKhF,UAAWR,IAAQyF,QAAxB,SAAkCnG,EAAMgC,cAK1CoE,EAAgBC,SAASC,eAAe,YAS/BC,EAPD,SAAAvG,GACV,OAAO,eAAC,WAAD,WACFwG,IAASC,aAAa,cAAC,EAAD,CAAUtF,QAASnB,EAAMmB,UAAYiF,GADzD,IAEFI,IAASC,aAAa,cAAC,EAAD,UAAezG,EAAMgC,WAAyBoE,O,gBCE9DM,EApBE,SAAC1G,GAChB,IAAM6D,EAAK,WAAO7D,EAAM6D,MAAMC,QAAQ,IAEtC,OACE,qBAAI5C,UAAWR,IAAQ,aAAvB,UACE,gCACE,6BAAKV,EAAMgE,OACX,sBAAK9C,UAAWR,IAAQmB,QAAxB,UACE,sBAAMX,UAAWR,IAAQmD,MAAzB,SAAiCA,IACjC,uBAAM3C,UAAWR,IAAQF,OAAzB,eAAoCR,EAAMQ,gBAG9C,sBAAKU,UAAWR,IAAQiG,QAAxB,UACE,wBAAQxF,QAASnB,EAAM4G,SAAvB,oBACA,wBAAQzF,QAASnB,EAAM6G,MAAvB,sB,gBCwEFC,GAAU,SAAC5D,GAAD,MAA4B,KAAjBA,EAAME,QAqGlB2D,GAlGE,SAAC/G,GAChB,MAAoDC,mBAAS,CAC3D+D,MAAM,EACNgD,QAAQ,EACRC,MAAM,EACNC,YAAY,IAJd,mBAAOC,EAAP,KAA2BC,EAA3B,KAOMC,EAAe1E,mBACf2E,EAAiB3E,mBACjB4E,EAAqB5E,mBACrB6E,EAAe7E,mBAwCf8E,EAAkB,UAAM/G,IAAQgH,QAAd,YACtBP,EAAmBnD,KAAO,GAAKtD,IAAQiH,SAEnCC,EAAoB,UAAMlH,IAAQgH,QAAd,YACxBP,EAAmBH,OAAS,GAAKtG,IAAQiH,SAErCE,EAAwB,UAAMnH,IAAQgH,QAAd,YAC5BP,EAAmBD,WAAa,GAAKxG,IAAQiH,SAEzCG,EAAkB,UAAMpH,IAAQgH,QAAd,YACtBP,EAAmBF,KAAO,GAAKvG,IAAQiH,SAGzC,OACE,uBAAMzG,UAAWR,IAAQkC,KAAMC,SApDV,SAACC,GACtBA,EAAMC,iBAEN,IAAMgF,EAAcV,EAAapE,QAAQC,MACnC8E,EAAgBV,EAAerE,QAAQC,MACvC+E,EAAoBV,EAAmBtE,QAAQC,MAC/CgF,EAAcV,EAAavE,QAAQC,MAEnCiF,GAAsBrB,GAAQiB,GAC9BK,GAAwBtB,GAAQkB,GAChCK,GAAsBvB,GAAQoB,GAC9BI,EA1B6C,IA0BNL,EA1BZ7E,OAAOtC,OA4BxCsG,EAAsB,CACpBpD,KAAMmE,EACNnB,OAAQoB,EACRnB,KAAMoB,EACNnB,WAAYoB,IAIZH,GACAC,GACAC,GACAC,GAKFtI,EAAMuI,UAAU,CACdvE,KAAM+D,EACNf,OAAQgB,EACRf,KAAMiB,EACNhB,WAAYe,KAmBd,UACE,sBAAK/G,UAAWuG,EAAhB,UACE,uBAAOpF,QAAQ,OAAf,uBACA,uBAAOiB,KAAK,OAAOzD,GAAG,OAAOsC,IAAKkF,KAChCF,EAAmBnD,MAAQ,8DAE/B,sBAAK9C,UAAW0G,EAAhB,UACE,uBAAOvF,QAAQ,SAAf,oBACA,uBAAOiB,KAAK,OAAOzD,GAAG,SAASsC,IAAKmF,KAClCH,EAAmBH,QAAU,gEAEjC,sBAAK9F,UAAW2G,EAAhB,UACE,uBAAOxF,QAAQ,SAAf,yBACA,uBAAOiB,KAAK,OAAOzD,GAAG,SAASsC,IAAKoF,KAClCJ,EAAmBD,YACnB,yFAGJ,sBAAKhG,UAAW4G,EAAhB,UACE,uBAAOzF,QAAQ,OAAf,kBACA,uBAAOiB,KAAK,OAAOzD,GAAG,OAAOsC,IAAKqF,KAChCL,EAAmBF,MAAQ,8DAE/B,sBAAK/F,UAAWR,IAAQiG,QAAxB,UACE,wBAAQrD,KAAK,SAASnC,QAASnB,EAAMwI,SAArC,oBAGA,wBAAQtH,UAAWR,IAAQ+H,OAA3B,4BC5EOC,GArGF,SAAC1I,GACZ,MAAsCC,oBAAS,GAA/C,mBAAO0I,EAAP,KAAoBC,EAApB,KACA,EAAkC3I,oBAAS,GAA3C,mBAAO4I,EAAP,KAAkBC,EAAlB,KACMlF,EAAUxD,qBAAWf,GACrB0J,EAAWnF,EAAQpE,MAAMsB,OAAS,EACxC,EAAoCb,oBAAS,GAA7C,mBAAO+I,EAAP,KAAmBC,EAAnB,KACMxJ,EAAW,WAAOmE,EAAQnE,YAAYqE,QAAQ,IAE9CoF,EAAwB,SAACrJ,GAC7B+D,EAAQhE,WAAWC,IAGfsJ,EAAqB,SAACxJ,GAC1BiE,EAAQlE,QAAR,2BAAqBC,GAArB,IAA2Ba,OAAQ,MAO/B4I,EAAkB,uCAAG,WAAOC,GAAP,SAAA3E,EAAA,6DACzBkE,GAAe,GADU,SAEnBjE,MACJ,yEACA,CACE2E,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,KAAML,EACNM,WAAY/F,EAAQpE,UARD,OAYzBoJ,GAAe,GACfE,GAAa,GACblF,EAAQ9D,YAdiB,2CAAH,sDAiBlB8J,EACJ,oBAAI1I,UAAWR,IAAQ,cAAvB,SACGkD,EAAQpE,MAAMoG,KAAI,SAACjG,GAAD,OACjB,cAAC,EAAD,CAEEqE,KAAMrE,EAAKqE,KACXxD,OAAQb,EAAKa,OACbqD,MAAOlE,EAAKkE,MACZ+C,SAAUsC,EAAsBW,KAAK,KAAMlK,EAAKE,IAChDgH,MAAOsC,EAAmBU,KAAK,KAAMlK,IALhCA,EAAKE,SAWZiK,EACJ,sBAAK5I,UAAWR,IAAQiG,QAAxB,UACE,wBAAQzF,UAAWR,IAAQ,eAAgBS,QAASnB,EAAM+J,WAA1D,mBAGChB,GACC,wBAAQ7H,UAAWR,IAAQC,OAAQQ,QA1CpB,WACnB8H,GAAc,IAyCV,sBAOAe,EACJ,eAAC,IAAMC,SAAP,WACGL,EACD,sBAAK1I,UAAWR,IAAQwJ,MAAxB,UACE,gDACA,+BAAOzK,OAERuJ,GACC,cAAC,GAAD,CAAUR,SAAUxI,EAAM+J,WAAYxB,UAAWa,KAEjDJ,GAAcc,KAIdK,EAA2B,sDAE3BC,EACJ,eAAC,IAAMH,SAAP,WACE,6DACA,qBAAK/I,UAAWR,IAAQiG,QAAxB,SACE,wBAAQzF,UAAWR,IAAQC,OAAQQ,QAASnB,EAAM+J,WAAlD,wBAON,OACE,eAAC,EAAD,CAAO5I,QAASnB,EAAM+J,WAAtB,WACIpB,IAAgBE,GAAamB,EAC9BrB,GAAewB,GACdxB,GAAeE,GAAauB,M,SCT9BC,GAAmB,CACvB7K,MAAO,GACPC,YAAa,GAGT6K,GAAc,SAACC,EAAOC,GAC1B,GAAoB,QAAhBA,EAAOlH,KAAgB,CACzB,IAOImH,EAPEC,EACJH,EAAM9K,YAAc+K,EAAO7K,KAAKkE,MAAQ2G,EAAO7K,KAAKa,OAEhDmK,EAAwBJ,EAAM/K,MAAMoL,WACxC,SAACjL,GAAD,OAAUA,EAAKE,KAAO2K,EAAO7K,KAAKE,MAE9BgL,EAAmBN,EAAM/K,MAAMmL,GAGrC,GAAIE,EAAkB,CACpB,IAAMC,EAAW,2BACZD,GADY,IAEfrK,OAAQqK,EAAiBrK,OAASgK,EAAO7K,KAAKa,UAEhDiK,EAAY,aAAOF,EAAM/K,QACZmL,GAAyBG,OAEtCL,EAAeF,EAAM/K,MAAMuL,OAAOP,EAAO7K,MAG3C,MAAO,CACLH,MAAOiL,EACPhL,YAAaiL,GAGjB,GAAoB,WAAhBF,EAAOlH,KAAmB,CAC5B,IAKImH,EALEE,EAAwBJ,EAAM/K,MAAMoL,WACxC,SAACjL,GAAD,OAAUA,EAAKE,KAAO2K,EAAO3K,MAEzBmL,EAAeT,EAAM/K,MAAMmL,GAC3BD,EAAqBH,EAAM9K,YAAcuL,EAAanH,MAE5D,GAA4B,IAAxBmH,EAAaxK,OACfiK,EAAeF,EAAM/K,MAAMyL,QAAO,SAACtL,GAAD,OAAUA,EAAKE,KAAO2K,EAAO3K,UAC1D,CACL,IAAMiL,EAAW,2BAAQE,GAAR,IAAsBxK,OAAQwK,EAAaxK,OAAS,KACrEiK,EAAY,aAAOF,EAAM/K,QACZmL,GAAyBG,EAGxC,MAAO,CACLtL,MAAOiL,EACPhL,YAAaiL,GAIjB,OAAIF,EAAOlH,KACF+G,IAuCIa,GAjCM,SAAClL,GACpB,MAAwCmL,qBACtCb,GACAD,IAFF,mBAAOe,EAAP,KAAkBC,EAAlB,KAiBMC,EAAc,CAClB9L,MAAO4L,EAAU5L,MACjBC,YAAa2L,EAAU3L,YACvBC,QAf2B,SAACC,GAC5B0L,EAAmB,CAAE/H,KAAM,MAAO3D,KAAMA,KAexCC,WAZgC,SAACC,GACjCwL,EAAmB,CAAE/H,KAAM,SAAUzD,GAAIA,KAYzCC,UATuB,WACvBuL,EAAmB,CAAE/H,KAAM,YAW7B,OACE,cAAC,EAAYiI,SAAb,CAAsBrI,MAAOoI,EAA7B,SACGtL,EAAMgC,YCxJEwJ,OAvBf,WAEE,MAAsCvL,oBAAS,GAA/C,mBAAOwL,EAAP,KAAoBC,EAApB,KAUA,OACE,eAAC,GAAD,WACGD,GAAe,cAAC,GAAD,CAAM1B,WANF,WACtB2B,GAAe,MAMb,cAAC,EAAD,CAAQlK,WAXY,WACtBkK,GAAe,MAWb,+BACE,cAAC,EAAD,UClBRlF,IAASmF,OAAO,cAAC,GAAD,IAAStF,SAASC,eAAe,W","file":"static/js/main.c9e38fdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2Ptc5\",\"control\":\"Checkout_control__1Iiyx\",\"actions\":\"Checkout_actions__2CiP3\",\"submit\":\"Checkout_submit__2kpXa\",\"invalid\":\"Checkout_invalid__1OVu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2ONSK\",\"total\":\"Cart_total__2447O\",\"actions\":\"Cart_actions__31zLz\",\"button--alt\":\"Cart_button--alt__3twek\",\"button\":\"Cart_button__n0XOB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__7BV4b\",\"summary\":\"CartItem_summary__1d3EH\",\"price\":\"CartItem_price__3YwGh\",\"amount\":\"CartItem_amount__3X4G1\",\"actions\":\"CartItem_actions__DJH8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3OInl\",\"icon\":\"HeaderCartButton_icon__1vvkt\",\"badge\":\"HeaderCartButton_badge__1S54K\",\"bump\":\"HeaderCartButton_bump__Txkec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__3Rp8o\",\"meals-appear\":\"AvailableMeals_meals-appear__3k3W0\",\"mealsLoading\":\"AvailableMeals_mealsLoading__2XGV2\",\"mealsError\":\"AvailableMeals_mealsError__1QA4U\",\"ul-appear\":\"AvailableMeals_ul-appear__26ia2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__ZXsTn\",\"description\":\"MealItem_description__3c1gr\",\"price\":\"MealItem_price__2jE7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1p1Cl\",\"modal\":\"Modal_modal__2LEjP\",\"slide-down\":\"Modal_slide-down__n6w9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__M3Yxd\",\"main-image\":\"Header_main-image__T-NIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__3hL77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__gqy0F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__1KEBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1T9NR\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import React from \"react\";\r\n\r\nconst CartContext = React.createContext({\r\n  items: [],\r\n  totalAmount: 0,\r\n  addItem: (item) => {},\r\n  removeItem: (id) => {},\r\n  clearCart : () => {}\r\n});\r\n\r\nexport default CartContext;\r\n","import CartIcon from \"../Cart/CartIcon\";\r\nimport classes from \"./HeaderCartButton.module.css\";\r\nimport { useContext, useEffect, useState} from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\n\r\n\r\nconst HeaderCartButton = (props) => {\r\n  const [buttonIsHighLighted,setButtonIsHighLighted] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const {items} = cartCtx;\r\n\r\n  const numberOfCartItems = items.reduce((curNumber, item) => {\r\n    return curNumber + item.amount;\r\n  }, 0);\r\n\r\n  const btnClasses = `${classes.button} ${buttonIsHighLighted ? classes.bump : ''}`;\r\n\r\n  useEffect(() => {\r\n    if (items.length === 0){\r\n      return;\r\n    }\r\n    setButtonIsHighLighted(true)\r\n\r\n\r\n    const timer = setTimeout(() => {\r\n      setButtonIsHighLighted(false);\r\n    }, 300);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [items]);\r\n\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={classes.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n","import React, { Fragment } from \"react\";\r\nimport mealsImage from '../../assests/meals.jpg';\r\nimport classes from './Header.module.css';\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\n\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n          <h1>ReactMeals</h1>\r\n          <HeaderCartButton onClick={props.onShowCart}/>\r\n      </header>\r\n      <div className={classes['main-image']}>\r\n          <img src={mealsImage} alt='a table full of delicious food!'/>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from './MealsSummary.module.css';\r\n\r\n\r\nconst MealsSummary = () => {\r\n  return (\r\n    <section className={classes.summary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;\r\n","import classes from './Card.module.css';\r\n\r\n\r\nconst Card = props => {\r\n\r\n    return <div className={classes.card}>{props.children}</div>\r\n\r\n\r\n};\r\n\r\nexport default Card;","import classes from \"./Input.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className={classes.input}>\r\n      <label htmlFor={props.input.id}>{props.label}</label>\r\n      <input ref={ref} {...props.input} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import classes from \"./MealItemForm.module.css\";\r\nimport Input from \"../../UI/Input\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst MealItemForm = (props) => {\r\n\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n  \r\n  const amountInputRef = useRef();\r\n\r\n  const sumbitHandler = event => {\r\n    event.preventDefault();\r\n    const enteredAmount = amountInputRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount\r\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5){\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n    props.onAddToCart(enteredAmountNumber);\r\n\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={sumbitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n","import classes from \"./MealItem.module.css\";\r\nimport MealItemForm from \"./MealItemForm\";\r\nimport CartContext from \"../../../store/cart-context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst MealItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const price = `$${props.price.toFixed(2)}`;\r\n\r\n  const addToCartHandler = (amount) => {\r\n    cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,\r\n      amount: amount,\r\n      price: props.price,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{props.name}</h3>\r\n        <div className={classes.description}>{props.description}</div>\r\n        <div className={classes.price}>{price}</div>\r\n      </div>\r\n      <div>\r\n        <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","import classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      setIsLoading(true);\r\n      const response = await fetch(\r\n        \"https://react-http-hooks-b6d25-default-rtdb.firebaseio.com/meals.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      console.log(response);\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n      console.log(loadedMeals);\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n    fetchMeals().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.mealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.mealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => {\r\n    return (\r\n      <MealItem\r\n        id={meal.id}\r\n        key={meal.id}\r\n        name={meal.name}\r\n        description={meal.description}\r\n        price={meal.price}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul className={classes.ul}>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","import MealsSummary from \"./MealsSummary\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\nimport React ,{Fragment} from \"react\";\r\n\r\nconst Meals = () => {\r\n    return <Fragment>\r\n        <MealsSummary/>\r\n        <AvailableMeals/>\r\n    </Fragment>\r\n};\r\n\r\nexport default Meals;","import classes from './Modal.module.css'\r\nimport React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Backdrop = props => {\r\n    return <div className={classes.backdrop} onClick={props.onClick}></div>\r\n};\r\n\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n};\r\n\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = props => {\r\n    return <Fragment>\r\n        {ReactDOM.createPortal(<Backdrop onClick={props.onClick}/>, portalElement)};\r\n        {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>,portalElement)}\r\n    </Fragment>\r\n}\r\n\r\nexport default Modal;","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `$${props.price.toFixed(2)}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.amount}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","// import classes from \"./Checkout.module.css\";\r\n// import { useRef, useState } from \"react\";\r\n\r\n// const isEmpty = (value) => value.trim().length === \"\";\r\n// const isFiveChars = (value) => value.trim().length !== 5;\r\n\r\n// const Checkout = (props) => {\r\n//   const [formInputValidity, setFormInputValidity] = useState({\r\n//     name: true,\r\n//     street: true,\r\n//     city: true,\r\n//     postalCode: true,\r\n//   });\r\n\r\n//   const nameInputRef = useRef();\r\n//   const streetInputRef = useRef();\r\n//   const postalCodeInputRef = useRef();\r\n//   const cityInputRef = useRef();\r\n\r\n//   const confirmHandler = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const enteredName = nameInputRef.current.value;\r\n//     const enteredStreet = streetInputRef.current.value;\r\n//     const enteredPostalCode = postalCodeInputRef.current.value;\r\n//     const enteredCity = cityInputRef.current.value;\r\n\r\n//     const enteredNameIsValid = !isEmpty(enteredName);\r\n//     const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n//     const enteredCityIsValid = !isEmpty(enteredCity);\r\n//     const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n//   };\r\n\r\n//   setFormInputValidity({\r\n//     name: enteredNameIsValid,\r\n//     street: enteredStreetIsValid,\r\n//     city: enteredCityIsValid,\r\n//     postalCode: enteredPostalCodeIsValid,\r\n//   });\r\n\r\n//   const formIsValid =\r\n//     enteredNameIsValid &&\r\n//     enteredCityIsValid &&\r\n//     enteredPostalCodeIsValid &&\r\n//     enteredStreetIsValid;\r\n\r\n//   if (!formIsValid) {\r\n//     return;\r\n//   }\r\n\r\n//   return (\r\n//     <form className={classes.form} onSubmit={confirmHandler}>\r\n//       <div className={`${classes.control} ${formInputValidity.name && classes.invalid}`}>\r\n//         <label htmlFor=\"name\">Your Name</label>\r\n//         <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n//         {!formInputValidity.name && <p>Please enter a valid name!</p>}\r\n//       </div>\r\n//       <div className={`${classes.control} ${formInputValidity.street && classes.invalid}`}>\r\n//         <label htmlFor=\"street\">Street</label>\r\n//         <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n//         {!formInputValidity.street && <p>Please enter a valid street!</p>}\r\n//       </div>\r\n//       <div className={`${classes.control} ${formInputValidity.postalCode && classes.invalid}`}>\r\n//         <label htmlFor=\"postal\">Postal Code</label>\r\n//         <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n//       </div>\r\n//       <div className={`${classes.control} ${formInputValidity.city && classes.invalid}`}>\r\n//         <label htmlFor=\"city\">City</label>\r\n//         <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n//         {!formInputValidity.postalCode && <p>Please enter a valid postal code(5 characters long)!</p>}\r\n//       </div>\r\n//       <div className={classes.actions}>\r\n//         <button type=\"button\" onClick={props.onCancel}>\r\n//         {!formInputValidity.city && <p>Please enter a valid city!</p>}\r\n//           Cancel\r\n//         </button>\r\n//         <button className={classes.sumbit}>Confirm</button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Checkout;\r\n\r\nimport { useRef, useState } from \"react\";\r\n\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode,\r\n    });\r\n    // Submit cart data\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postal code (5 characters long)!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem.js\";\r\nimport Checkout from \"./Checkout\";\r\nconst Cart = (props) => {\r\n  const [isSumbiting, setIsSumbiting] = useState(false);\r\n  const [didSumbit, setDidSumbit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const hasItems = cartCtx.items.length > 0;\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const sumbitOrderHandler = async (userData) => {\r\n    setIsSumbiting(true);\r\n    await fetch(\r\n      \"https://react-http-hooks-b6d25-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setIsSumbiting(false);\r\n    setDidSumbit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onHideCart}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onCancel={props.onHideCart} onConfirm={sumbitOrderHandler} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSumbittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSumbitModalContent = (\r\n    <React.Fragment>\r\n      <p>Successfully send the order!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onHideCart}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onClick={props.onHideCart}>\r\n      {!isSumbiting && !didSumbit && cartModalContent}\r\n      {isSumbiting && isSumbittingModalContent}\r\n      {!isSumbiting && didSumbit && didSumbitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","// import CartContext from \"./cart-context\";\r\n// import { useReducer } from \"react\";\r\n\r\n// const defaultCartState = {\r\n//   items: [],\r\n//   totalAmount: 0,\r\n// };\r\n\r\n// const cartRducer = (state, action) => {\r\n//   if (action.type === \"ADD\") {\r\n//     const updatedTotalAmount =\r\n//       state.totalAmount + action.item.price * action.item.amount;\r\n//     const exitingCartItemIndex = state.items.findIndex(\r\n//       (item) => item.id === action.item.id\r\n//     );\r\n\r\n//     const existingCartItem = state.items[exitingCartItemIndex];\r\n\r\n//     let updatedItems;\r\n\r\n//     if (existingCartItem) {\r\n//       const updatedItem = {\r\n//         ...existingCartItem,\r\n//         amount: existingCartItem.amount + action.item.amount,\r\n//       };\r\n//       updatedItems = [...state.items];\r\n//       updatedItems[exitingCartItemIndex] = updatedItem;\r\n//     } else {\r\n//       updatedItems = state.items.concat(action.item);\r\n//     }\r\n\r\n//     return {\r\n//       items: updatedItems,\r\n//       totalAmount: updatedTotalAmount,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"REMOVE\") {\r\n//     const exitingCartItemIndex = state.items.findIndex(\r\n//       (item) => item.id === action.id\r\n//     );\r\n//     const existingItem = state.item[exitingCartItemIndex];\r\n//     const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n//     let updatedItems;\r\n//     if (existingItem.amount === 1 ){\r\n//         updatedItems = state.items.filter(item => item.id !== action.id)\r\n//     }else {\r\n//         const updatedItem = {...existingItem, amount : existingItem.amount - 1};\r\n//         updatedItems = [...state.items];\r\n//         updatedItems[exitingCartItemIndex] = updatedItem;\r\n//     }\r\n//     return {\r\n//         items: updatedItems,\r\n//         totalAmount: updatedTotalAmount,\r\n//     }\r\n//   }\r\n//   return defaultCartState;\r\n// };\r\n\r\n// const CartProvider = (props) => {\r\n//   const [cartState, dispatchCartAction] = useReducer(\r\n//     cartRducer,\r\n//     defaultCartState\r\n//   );\r\n\r\n//   const addItemToCartHandler = (item) => {\r\n//     dispatchCartAction({ type: \"ADD\", item: item });\r\n//   };\r\n\r\n//   const removeItemFromCartHandler = (id) => {\r\n//     dispatchCartAction({ type: \"REMOVE\", id: id });\r\n//   };\r\n\r\n//   const cartContext = {\r\n//     items: cartState.items,\r\n//     totalAmount: cartState.totalAmount,\r\n//     addItem: addItemToCartHandler,\r\n//     removeItem: removeItemFromCartHandler,\r\n//   };\r\n\r\n//   return (\r\n//     <CartContext.Provider value={cartContext}>\r\n//       {props.children}\r\n//     </CartContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default CartProvider;\r\n\r\nimport { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    return defaultCartState;\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","import Header from \"./components/Layout/Header\";\nimport React, {useState} from \"react\";\nimport Meals from \"./components/Meals/Meals.js\"\nimport Cart from \"./components/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\n\nfunction App() {\n\n  const [cardIsShown, setCartIsShown] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  }\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  }\n\n  return (\n    <CartProvider>\n      {cardIsShown && <Cart onHideCart={hideCartHandler} />}\n      <Header onShowCart={showCartHandler}/>\n      <main>\n        <Meals/>\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}